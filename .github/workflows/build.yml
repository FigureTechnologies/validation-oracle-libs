name: Build

on:
  pull_request:
    types: [ synchronize, opened, reopened, ready_for_review, converted_to_draft ]
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      linting:
        type: boolean
        description: Run the linter
        required: false
        default: false
      runCodeCoverage:
        type: boolean
        description: Run code coverage
        required: false
        default: true
      smartContractVersion:
        type: string
        description: GitHub tag of the smart contract version to run the tests against
        required: false
        default: "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    if: github.event.inputs.linting == true || github.event.pull_request.draft == false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Linting
        run: ./gradlew clean ktlintCheck --parallel --refresh-dependencies

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      RUN_CODE_COVERAGE:
        ${{
        github.event.inputs.runCodeCoverage == true ||
        github.event.pull_request.draft == false ||
        github.event_name == 'push'
        }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build with Gradle
        env:
          SMART_CONTRACT_VERSION_TAG: ${{ github.event.inputs.smartContractVersion }}
        run: ./gradlew clean build --refresh-dependencies -Pversion=$VERSION -x koverReport

      - name: Generate code coverage reports
        if: env.RUN_CODE_COVERAGE == 'true'
        run: ./gradlew koverReport

      - name: Upload coverage reports
        if: env.RUN_CODE_COVERAGE == 'true'
        uses: codecov/codecov-action@v3
        with:
          files: build/reports/kover/report.xml

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          check_name: "Test Results"
          pull_request_build: ${{ github.event_name == 'push' && 'commit' || 'merge' }}
          commit: ${{ github.event.workflow_run.head_sha }}
          report_individual_runs: true
          files: "**/build/test-results/**/*.xml"
