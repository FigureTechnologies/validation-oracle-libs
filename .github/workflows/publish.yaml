name: Publish

on:
  release:
    types: [created]
  push:
    branches:
      - main

jobs:
  java_build:
    name: Build and Publish Jar
    runs-on: ubuntu-latest
    env:
      # Needed to allow release version to be fetched and then sent to the publish artifact step
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Version
        run: |
          # Strip git prefix from version
          RELEASE_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && RELEASE_VERSION=$(echo $RELEASE_VERSION | sed -e 's/^v//')
          # Echo derived version for reference
          echo "Using version: $RELEASE_VERSION"
          # Export release version from step for use in publish artifact step
          echo "::set-env name=RELEASE_VERSION::$RELEASE_VERSION"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
          server-id: github

      - name: Build with Gradle
        run: ./gradlew clean build --refresh-dependencies -Pversion=$RELEASE_VERSION

      - name: Install gpg secret key
        if: github.event_name == 'release'
        run: |
          export GPG_TTY=$(tty)
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > $GITHUB_WORKSPACE/release.gpg

      - name: Publish to Maven Central
        if: github.event_name == 'release'
        # Pull in nexus user / pass from environment to pass into sonatype login
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          echo "Publishing release for version [$RELEASE_VERSION]"
          ./gradlew publishToSonatype $(if [ "${{github.event.release.prerelease}}" = "true" ]; then echo 'closeSonatypeStagingRepository'; else echo 'closeAndReleaseSonatypeStagingRepository'; fi) \
            -PlibraryVersion=$RELEASE_VERSION \
            -Psigning.keyId=69C08EA0 -Psigning.password="${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}" -Psigning.secretKeyRingFile=$GITHUB_WORKSPACE/release.gpg \
            --info
          

